{"version":3,"file":"static/js/594.565848d0.chunk.js","mappings":"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","sources":["hooks/useFetch.ts","pages/Landing.tsx"],"sourcesContent":["import { useEffect, useReducer, useRef } from \"react\";\n\ninterface State<T> {\n  data?: T;\n  error?: Error;\n}\n\ntype Cache<T> = { [url: string]: T };\n\n// discriminated union type\ntype Action<T> =\n  | { type: \"loading\" }\n  | { type: \"fetched\"; payload: T }\n  | { type: \"error\"; payload: Error };\n\nfunction useFetch<T = unknown>(url?: string, options?: RequestInit): State<T> {\n  const cache = useRef<Cache<T>>({});\n\n  // Used to prevent state update if the component is unmounted\n  const cancelRequest = useRef<boolean>(false);\n\n  const initialState: State<T> = {\n    error: undefined,\n    data: undefined,\n  };\n\n  // Keep state logic separated\n  const fetchReducer = (state: State<T>, action: Action<T>): State<T> => {\n    switch (action.type) {\n      case \"loading\":\n        return { ...initialState };\n      case \"fetched\":\n        return { ...initialState, data: action.payload };\n      case \"error\":\n        return { ...initialState, error: action.payload };\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(fetchReducer, initialState);\n\n  useEffect(() => {\n    // Do nothing if the url is not given\n    if (!url) return;\n\n    cancelRequest.current = false;\n\n    const fetchData = async () => {\n      dispatch({ type: \"loading\" });\n\n      // If a cache exists for this url, return it\n      if (cache.current[url]) {\n        dispatch({ type: \"fetched\", payload: cache.current[url] });\n        return;\n      }\n\n      try {\n        const response = await fetch(url, options);\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n\n        const data = (await response.json()) as T;\n        cache.current[url] = data;\n        if (cancelRequest.current) return;\n\n        dispatch({ type: \"fetched\", payload: data });\n      } catch (error) {\n        if (cancelRequest.current) return;\n\n        dispatch({ type: \"error\", payload: error as Error });\n      }\n    };\n\n    void fetchData();\n\n    // Use the cleanup function for avoiding a possibly...\n    // ...state update after the component was unmounted\n    return () => {\n      cancelRequest.current = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [url]);\n\n  return state;\n}\n\nexport default useFetch;\n","import { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport {\n  Grid,\n  FormControl,\n  Select,\n  MenuItem,\n  Box,\n  Typography,\n  SelectChangeEvent,\n} from \"@mui/material\";\n\nimport useFetch from \"hooks/useFetch\";\nimport VehicleCard from \"components/VehicleCard\";\nimport { URL, STATIC_API_RESPONSE } from \"utilities/contants\";\nimport { createUniqueId } from \"utilities/utilityFunctions\";\nimport \"assets/styles/Landing.scss\";\nimport {\n  ResponseInterface,\n  InterceptedResponseInterface,\n  VehRentalCore,\n  VehVendorAvail,\n} from \"interface\";\n\nconst Landing = () => {\n  const { data } = useFetch<ResponseInterface[]>(URL);\n\n  const [carsList, setCarsList] = useState<InterceptedResponseInterface[]>([]);\n  const [rentalInfo, setRentalInfo] = useState<VehRentalCore>();\n  const [sortBy, setSortBy] = useState(\"low-high\");\n\n  const responseInterceptor = (data: ResponseInterface) => {\n    let cars: InterceptedResponseInterface[] = [];\n    data.VehAvailRSCore.VehVendorAvails.map((vehVendorAvail: VehVendorAvail) =>\n      vehVendorAvail.VehAvails.map((car) =>\n        cars.push({\n          ...car,\n          Price: parseFloat(car.TotalCharge[\"@RateTotalAmount\"]),\n          Id: createUniqueId(),\n          Vendor: vehVendorAvail.Vendor,\n        })\n      )\n    );\n    cars = cars.sort((a, b) => a.Price - b.Price);\n    setCarsList(cars);\n    setRentalInfo(data.VehAvailRSCore.VehRentalCore);\n  };\n\n  useEffect(() => {\n    if (data) responseInterceptor(data[0]);\n    else responseInterceptor(STATIC_API_RESPONSE[0]);\n  }, [data]);\n\n  const handleSort = (event: SelectChangeEvent) => {\n    let sortedList = carsList;\n    setSortBy(event.target.value as string);\n    switch (event.target.value) {\n      case \"high-low\":\n        sortedList = carsList.sort((a, b) => b.Price - a.Price);\n        break;\n\n      default:\n        sortedList = carsList.sort((a, b) => a.Price - b.Price);\n        break;\n    }\n\n    setCarsList(sortedList);\n  };\n\n  return (\n    <>\n      <div className=\"sortby-dropdown\">\n        <span>Sort:</span>\n        <Box>\n          <FormControl size=\"small\">\n            <Select value={sortBy} onChange={handleSort}>\n              <MenuItem value=\"low-high\">Price (low-high)</MenuItem>\n              <MenuItem value=\"high-low\">Price (high-low)</MenuItem>\n            </Select>\n          </FormControl>\n        </Box>\n      </div>\n\n      <Grid container justifyContent=\"space-between\" spacing={2}>\n        <Grid item xs={12} lg={3}>\n          <Box className=\"rental-information\">\n            <Typography component=\"p\" className=\"rental-information__title\">\n              Rental Informarion\n            </Typography>\n            <div>\n              <Typography>Pick up</Typography>\n              <Typography variant=\"body2\">\n                {rentalInfo?.PickUpLocation[\"@Name\"]}\n              </Typography>\n              <Typography variant=\"caption\">\n                {moment(rentalInfo && rentalInfo[\"@PickUpDateTime\"]).format(\n                  \"YYYY-MM-DD HH:mm\"\n                )}\n              </Typography>\n              <Typography>Return</Typography>\n              <Typography variant=\"body2\">\n                {rentalInfo?.ReturnLocation[\"@Name\"]}\n              </Typography>\n              <Typography variant=\"caption\">\n                {moment(rentalInfo && rentalInfo[\"@ReturnDateTime\"]).format(\n                  \"YYYY-MM-DD HH:mm\"\n                )}\n              </Typography>\n            </div>\n          </Box>\n        </Grid>\n\n        <Grid item container xs={12} lg={9} spacing={2}>\n          {carsList.map((obj) => (\n            <Grid item key={obj.Id} xs={12}>\n              <VehicleCard vehicleDetails={obj} />\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Landing;\n"],"names":["url","options","cache","useRef","cancelRequest","initialState","error","undefined","data","useReducer","state","action","type","payload","dispatch","useEffect","current","fetchData","fetch","response","ok","Error","statusText","json","useFetch","URL","useState","carsList","setCarsList","rentalInfo","setRentalInfo","sortBy","setSortBy","responseInterceptor","cars","VehAvailRSCore","VehVendorAvails","map","vehVendorAvail","VehAvails","car","push","Price","parseFloat","TotalCharge","Id","createUniqueId","Vendor","sort","a","b","VehRentalCore","STATIC_API_RESPONSE","className","Box","FormControl","size","Select","value","onChange","event","sortedList","target","MenuItem","Grid","container","justifyContent","spacing","item","xs","lg","Typography","component","variant","PickUpLocation","moment","format","ReturnLocation","obj","VehicleCard","vehicleDetails"],"sourceRoot":""}